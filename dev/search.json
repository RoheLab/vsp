[{"path":"https://rohelab.github.io/vsp/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 vsp authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rohelab.github.io/vsp/dev/articles/bff.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"Interpreting factors with bff(), the Best Feature Function","text":"post-clustering analysis, Best Feature Function (BFF) useful selecting representative features cluster, especially case additional covariates available feature. example, consider social network nn users partitioned kk clusters, user possess series text document (covariates). want summarize words representative cluster. BFF suitable type task. document describes intuition behind BFF follow-step vsp (vintage specral clustering) touches several technical issues regarding implementation.","code":""},{"path":"https://rohelab.github.io/vsp/dev/articles/bff.html","id":"methodology","dir":"Articles","previous_headings":"","what":"Methodology","title":"Interpreting factors with bff(), the Best Feature Function","text":"simplicity, consider symmetric square input matrix (e.g., adjacency matrix undirected graph); analysis rectangular input also supported bff(). Given data matrix ∈ℝn×nA \\\\mathbb{R}^{n \\times n}, vsp returns approximation factorization, ZBYTZBY^T, B∈ℝk×kB \\\\mathbb{R}^{k \\times k} low-rank, Y∈ℝn×kY \\\\mathbb{R}^{n \\times k} encodes loadings feature (.e., columns AA) respect clusters. particular, AA adjacency matrix undirected Blockmodel graph, row YY decodes block (cluster) membership vertex (feature). Generally, loading YijY_{ij} (=1,...,ni=1,...,n j=1,...,kj=1,...,k) can interpreted membership measure ii-th feature jj-th cluster. Now, suppose addition covariates feature, D∈ℝn×pD \\\\mathbb{R}^{n \\times p}, pp dimension covariates. example, DD can document-term matrix, text data associated ii-th (=1,...,ni=1,...,n) feature pooled meta document, pp circumstance size corpus (.e., total number words/terms), DilD_{il} frequency word ll (l=1,...,pl=1,...,p) appearing ii-th document. BFF uses YY DD produce assessment covariates “best” cluster. start , suppose YY DD non-negative entries.Define importance, ∈ℝp×kI \\\\mathbb{R}^{p \\times k}, ll-th covariate jj-th cluster average ll-th covariate (ll-th columns DD), weighted jj-th column YY, Ilj=∑j=1nDjlYij, l=1,...,p,=1,...n,I_{lj} = \\sum_{j=1}^n D_{jl} Y_{ij}, \\text{ } l=1,...,p,=1,...n, compactly (side note: cross product ⟨D,Y⟩\\langle D,Y \\rangle defined DTYD^T Y convention), =⟨D,Y⟩.=\\langle D,Y \\rangle. , higher value IljI_{lj} indicates significant importance. BFF selects “best” covariates cluster according jj-th (j=1,...,kj=1, ..., k) column II.","code":""},{"path":"https://rohelab.github.io/vsp/dev/articles/bff.html","id":"implementation","dir":"Articles","previous_headings":"","what":"Implementation","title":"Interpreting factors with bff(), the Best Feature Function","text":"notes implementation BFF: Positive skewness. DD document-term matrix (.k.., bags words), holds elements non-negative. However, absolutely guarantee YY non-negative entries. motivates positive-skew transformation, .e., flip signs columns YY negative sample third moment. Handling negative elements. now, undergo rather ad-hoc solution existence negative elements YY – pretending little effects. importance calculation, negative weights (Yij<0Y_{ij}<0) equally treated −1-1. words, negative elements result subtractions/reduction/contraction importance metrics. Weight normalization. BFF, utilize YY matrix way weighting covariates (DD). therefore natrual expect columns YY (akin ) probability distributions, .e., probability select one member cluster random. Recall also columns YY (close ) unit ℓ2\\ell_2-norm. Hence, additional transformation needed: normalized YY column. particular, done separately positive negative elements. Variance stabilization. model IljI_{lj} Poisson rate model Poisson(λlj)\\text{Poisson}(\\lambda_{lj}), sample mean variance coupled (.e., expectation λlj\\lambda_{lj}). order standardize importance measure II, need decouple two statistics. Performing square-root transformation, f(x)=xf(x)=\\sqrt{x}, trick; stabilizes sampling variance, becomes nearly constant.","code":""},{"path":"https://rohelab.github.io/vsp/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Karl Rohe. Author. Muzhe Zeng. Author. Alex Hayes. Author, maintainer, copyright holder. Fan Chen. Author.","code":""},{"path":"https://rohelab.github.io/vsp/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rohe K, Zeng M, Hayes , Chen F (2024). vsp: Vintage Sparse PCA Semi-Parametric Factor Analysis. R package version 0.1.1.9000, https://github.com/RoheLab/vsp, https://rohelab.github.io/vsp/.","code":"@Manual{,   title = {vsp: Vintage Sparse PCA for Semi-Parametric Factor Analysis},   author = {Karl Rohe and Muzhe Zeng and Alex Hayes and Fan Chen},   year = {2024},   note = {R package version 0.1.1.9000, https://github.com/RoheLab/vsp},   url = {https://rohelab.github.io/vsp/}, }"},{"path":"https://rohelab.github.io/vsp/dev/index.html","id":"vsp","dir":"","previous_headings":"","what":"Vintage Sparse PCA for Semi-Parametric Factor Analysis","title":"Vintage Sparse PCA for Semi-Parametric Factor Analysis","text":"goal vsp enable fast, spectral estimation latent factors random dot product graphs. mild assumptions, vsp estimator consistent (degree-corrected) stochastic blockmodels, (degree-corrected) mixed-membership stochastic blockmodels, degree-corrected overlapping stochastic blockmodels. generally, vsp estimator consistent random dot product graphs can written form Z Y satisfy varimax assumptions [1]. vsp works directed undirected graphs, weighted unweighted graphs. Note vsp semi-parametric estimator.","code":"E(A) = Z B Y^T"},{"path":"https://rohelab.github.io/vsp/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Vintage Sparse PCA for Semi-Parametric Factor Analysis","text":"can install released version vsp CRAN can install development version vsp :","code":"install.packages(\"vsp\") install.packages(\"devtools\") devtools::install_github(\"RoheLab/vsp\")"},{"path":"https://rohelab.github.io/vsp/dev/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Vintage Sparse PCA for Semi-Parametric Factor Analysis","text":"Obtaining estimates vsp straightforward. recommend representing networks igraph objects sparse adjacency matrices using Matrix package. network one formats, can get estimates calling vsp() function. result vsp_fa S3 object. demonstrate vsp usage igraph object, using enron network igraphdata package demonstrate functionality. First peak graph:  Now estimate: visualize screeplot singular value, use:  moment, also enjoy using pairs plots factors diagnostic measure:   Similarly, IPR pairs plot can good way check singular vector localization (thus overfitting!).","code":"library(igraph) data(enron, package = \"igraphdata\")  image(sign(get.adjacency(enron, sparse = FALSE))) library(vsp)  fa <- vsp(enron, rank = 30) fa #> Vintage Sparse PCA Factor Analysis #>  #> Rows (n):   184 #> Cols (d):   184 #> Factors (rank): 30 #> Lambda[rank]:   0.2077 #> Components #>  #> Z: 184 x 30 [dgeMatrix]  #> B: 30 x 30 [dgeMatrix]  #> Y: 184 x 30 [dgeMatrix]  #> u: 184 x 30 [matrix]  #> d: 30      [numeric]  #> v: 184 x 30 [matrix] get_varimax_z(fa) #> # A tibble: 184 × 31 #>    id         z01      z02      z03      z04      z05      z06      z07      z08 #>    <chr>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 row0…  2.42e-4 -0.00245 -2.99e-2  3.37e-4  9.96e-5 -0.0114  -0.00849  0.502   #>  2 row0… -2.52e-3  0.00135  6.70e-4 -1.63e-1 -1.47e-2  0.0471   0.190    0.00181 #>  3 row0…  2.98e-4 -0.100    1.17e-4 -3.62e-3 -2.06e-2  0.187   -0.158    0.00303 #>  4 row0… -7.75e-5 -0.0183   1.17e-4  5.42e-2 -5.58e-3  0.00165 -0.0367  -0.00106 #>  5 row0… -2.31e-3  0.00150  2.57e-1 -1.42e-2 -4.38e-2  0.00629  1.18    -0.0179  #>  6 row0… -3.46e-2 -0.0527  -2.61e-2 -1.26e-2 -1.83e-2  0.0282   0.408   -0.0286  #>  7 row0… -1.08e-3 -0.327   -6.01e-1 -6.98e-2 -9.85e-2 -0.0709   0.509    0.0511  #>  8 row0…  1.58e-2 -0.0518  -1.34e-2 -1.03e-2 -4.12e-3 -0.0139   0.225   -0.0244  #>  9 row0…  2.22e-3  0.0752   3.30e-2 -6.50e-4 -5.00e-1 -0.0278  -0.0740  -0.00556 #> 10 row0…  7.13e-4 -0.0119   1.95e-2 -5.06e-3 -7.08e-3  0.00341 -0.00369 13.4     #> # … with 174 more rows, and 22 more variables: z09 <dbl>, z10 <dbl>, z11 <dbl>, #> #   z12 <dbl>, z13 <dbl>, z14 <dbl>, z15 <dbl>, z16 <dbl>, z17 <dbl>, #> #   z18 <dbl>, z19 <dbl>, z20 <dbl>, z21 <dbl>, z22 <dbl>, z23 <dbl>, #> #   z24 <dbl>, z25 <dbl>, z26 <dbl>, z27 <dbl>, z28 <dbl>, z29 <dbl>, z30 <dbl> screeplot(fa) plot_varimax_z_pairs(fa, 1:5) plot_varimax_y_pairs(fa, 1:5) plot_ipr_pairs(fa) plot_mixing_matrix(fa)"},{"path":"https://rohelab.github.io/vsp/dev/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Vintage Sparse PCA for Semi-Parametric Factor Analysis","text":"Rohe, K. & Zeng, M. Vintage Factor Analysis Varimax Performs Statistical Inference. 2022+. https://arxiv.org/abs/2004.05387. Code reproduce results paper available .","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/bff.html","id":null,"dir":"Reference","previous_headings":"","what":"Find features most associated with cluster membership — bff","title":"Find features most associated with cluster membership — bff","text":"Find features associated cluster membership","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/bff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find features most associated with cluster membership — bff","text":"","code":"bff(loadings, features, num_best)"},{"path":"https://rohelab.github.io/vsp/dev/reference/bff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find features most associated with cluster membership — bff","text":"loadings n k matrix weights indicates important ith user jth cluster, .e., Z Y matrix calculated vsp(). features n d matrix features measured node network. num_best integer indicating many top features differentiating loadings want.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/bff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find features most associated with cluster membership — bff","text":"n k matrix whose [, j] entry ith \"important\" feature cluster j.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/bff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find features most associated with cluster membership — bff","text":"See vignette(\"bff\").","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/bind_varimax_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Z factor loadings to node table of tidygraph — bind_varimax_z","title":"Add Z factor loadings to node table of tidygraph — bind_varimax_z","text":"Add Z factor loadings node table tidygraph","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/bind_varimax_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Z factor loadings to node table of tidygraph — bind_varimax_z","text":"","code":"bind_varimax_z(graph, fa, ...)  bind_varimax_y(graph, fa, ...)  bind_svd_u(graph, fa, ...)  bind_svd_v(graph, fa, ...)"},{"path":"https://rohelab.github.io/vsp/dev/reference/bind_varimax_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Z factor loadings to node table of tidygraph — bind_varimax_z","text":"graph tidygraph::tbl_graph object. fa Optionally, vsp object extract varimax loadings . passed vsp object, one created. ... Arguments passed vsp x Either graph adjacency matrix, igraph::igraph tidygraph::tbl_graph. x matrix Matrix::Matrix x[, j] correspond edge going node node j. rank number factors calculate.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/bind_varimax_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Z factor loadings to node table of tidygraph — bind_varimax_z","text":"graph object columns factor1, ..., factor{rank} table node information.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/bind_varimax_z.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Add Z factor loadings to node table of tidygraph — bind_varimax_z","text":"bind_varimax_y(): Add Y factor loadings node table tidygraph bind_svd_u(): Add left singular vectors node table tidygraph bind_svd_v(): Add right singular vectors node table tidygraph","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/get_svd_u.html","id":null,"dir":"Reference","previous_headings":"","what":"Get left singular vectors in a tibble — get_svd_u","title":"Get left singular vectors in a tibble — get_svd_u","text":"Get left singular vectors tibble","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/get_svd_u.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get left singular vectors in a tibble — get_svd_u","text":"","code":"get_svd_u(fa, factors = 1:fa$rank)  get_svd_v(fa, factors = 1:fa$rank)  get_varimax_z(fa, factors = 1:fa$rank)  get_varimax_y(fa, factors = 1:fa$rank)"},{"path":"https://rohelab.github.io/vsp/dev/reference/get_svd_u.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get left singular vectors in a tibble — get_svd_u","text":"fa vsp_fa() object. factors specific columns index . reliable option index integer vector column indices, also use character vector columns named. default returns factors/singular vectors.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/get_svd_u.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get left singular vectors in a tibble — get_svd_u","text":"tibble::tibble() one row node, one column containing requested factor singular vector, plus additional id column.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/get_svd_u.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get left singular vectors in a tibble — get_svd_u","text":"get_svd_v(): Get right singular vectors tibble get_varimax_z(): Get varimax Y factors tibble get_varimax_y(): Get varimax Z factors tibble","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/get_svd_u.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get left singular vectors in a tibble — get_svd_u","text":"","code":"data(enron, package = \"igraphdata\")  fa <- vsp(enron, rank = 30) #> This graph was created by an old(er) igraph version. #> ℹ Call `igraph::upgrade_graph()` on it to use with the current igraph version. #> For now we convert it on the fly... fa #> Vintage Sparse PCA Factor Analysis #>  #> Rows (n):   184 #> Cols (d):   184 #> Factors (rank): 30 #> Lambda[rank]:   0.2077 #> Components #>  #> Z: 184 x 30 [matrix]  #> B: 30 x 30 [matrix]  #> Y: 184 x 30 [matrix]  #> u: 184 x 30 [matrix]  #> d: 30      [numeric]  #> v: 184 x 30 [matrix]  #>   get_svd_u(fa) #> # A tibble: 184 × 31 #>    id           u01     u02      u03     u04      u05      u06      u07      u08 #>    <chr>      <dbl>   <dbl>    <dbl>   <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 row001 0.0000162 2.80e-4  5.22e-4 4.71e-4  6.45e-4  1.33e-3  3.33e-3 -3.81e-2 #>  2 row002 0.000588  2.23e-3  6.97e-4 1.17e-2  7.25e-3  2.31e-3  7.09e-3  3.41e-3 #>  3 row003 0.0000942 6.95e-4  4.32e-4 4.50e-3  5.87e-3  1.57e-2  2.30e-4  2.53e-3 #>  4 row004 0.000105  6.05e-4 -2.63e-5 3.79e-3  2.12e-3 -1.04e-3 -1.42e-4  4.74e-4 #>  5 row005 0.00252   1.06e-2  1.99e-2 1.61e-2  9.37e-3  8.45e-3  5.80e-2  1.82e-2 #>  6 row006 0.00299   7.59e-3  1.45e-3 8.55e-3  5.97e-3  4.60e-3  5.44e-2  1.29e-2 #>  7 row007 0.00146   1.80e-2  6.87e-3 2.43e-2  8.48e-3  1.53e-4  4.58e-2 -2.76e-2 #>  8 row008 0.00193   3.97e-3 -2.91e-4 2.06e-3  1.08e-3  1.38e-3  1.12e-2  2.21e-3 #>  9 row009 0.00150   4.77e-3 -1.82e-4 3.61e-2 -7.74e-2  1.80e-2  1.06e-4 -1.90e-4 #> 10 row010 0.000329  4.10e-3  7.46e-3 1.05e-2  1.22e-2  2.37e-2  7.10e-2 -7.62e-1 #> # ℹ 174 more rows #> # ℹ 22 more variables: u09 <dbl>, u10 <dbl>, u11 <dbl>, u12 <dbl>, u13 <dbl>, #> #   u14 <dbl>, u15 <dbl>, u16 <dbl>, u17 <dbl>, u18 <dbl>, u19 <dbl>, #> #   u20 <dbl>, u21 <dbl>, u22 <dbl>, u23 <dbl>, u24 <dbl>, u25 <dbl>, #> #   u26 <dbl>, u27 <dbl>, u28 <dbl>, u29 <dbl>, u30 <dbl> get_svd_v(fa) #> # A tibble: 184 × 31 #>    id          v01     v02       v03     v04      v05      v06      v07      v08 #>    <chr>     <dbl>   <dbl>     <dbl>   <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 col001 0.000291 0.00122  0.00107  0.00402  2.65e-3  0.00242  1.49e-2 -5.75e-2 #>  2 col002 0.00209  0.00856  0.00679  0.0269   1.65e-2  0.00562  7.04e-2  1.19e-2 #>  3 col003 0.000888 0.00378  0.00238  0.0246   2.60e-2  0.0585   1.57e-2  1.11e-2 #>  4 col004 0.000317 0.00131  0.000631 0.00867  7.56e-3  0.0122   7.10e-3  4.11e-3 #>  5 col005 0.00564  0.0179   0.0376   0.0275   1.57e-2  0.0109   1.21e-1  2.64e-2 #>  6 col006 0.00222  0.00745  0.00147  0.0105   3.76e-3  0.00511  6.15e-2  1.65e-2 #>  7 col007 0.00383  0.0437   0.0129   0.122    5.38e-2 -0.0283   1.25e-1 -4.77e-2 #>  8 col008 0.00189  0.00150  0.000384 0.00392  9.75e-4  0.00143  1.33e-2  3.26e-3 #>  9 col009 0.000393 0.00153 -0.000196 0.0158  -3.37e-2  0.00766 -4.64e-4  3.77e-4 #> 10 col010 0.000450 0.00818  0.0147   0.00770  1.15e-2  0.0248   4.34e-2 -4.81e-1 #> # ℹ 174 more rows #> # ℹ 22 more variables: v09 <dbl>, v10 <dbl>, v11 <dbl>, v12 <dbl>, v13 <dbl>, #> #   v14 <dbl>, v15 <dbl>, v16 <dbl>, v17 <dbl>, v18 <dbl>, v19 <dbl>, #> #   v20 <dbl>, v21 <dbl>, v22 <dbl>, v23 <dbl>, v24 <dbl>, v25 <dbl>, #> #   v26 <dbl>, v27 <dbl>, v28 <dbl>, v29 <dbl>, v30 <dbl>  get_varimax_z(fa) #> # A tibble: 184 × 31 #>    id         z01      z02      z03      z04      z05      z06      z07      z08 #>    <chr>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 row0…  2.42e-4 -0.00245 -2.99e-2  3.37e-4  9.96e-5 -0.0114  -0.00849  0.502   #>  2 row0… -2.52e-3  0.00135  6.70e-4 -1.63e-1 -1.47e-2  0.0471   0.190    0.00181 #>  3 row0…  2.98e-4 -0.100    1.17e-4 -3.62e-3 -2.06e-2  0.187   -0.158    0.00303 #>  4 row0… -7.75e-5 -0.0183   1.17e-4  5.42e-2 -5.58e-3  0.00165 -0.0367  -0.00106 #>  5 row0… -2.31e-3  0.00150  2.57e-1 -1.42e-2 -4.38e-2  0.00629  1.18    -0.0179  #>  6 row0… -3.46e-2 -0.0527  -2.61e-2 -1.26e-2 -1.83e-2  0.0282   0.408   -0.0286  #>  7 row0… -1.08e-3 -0.327   -6.01e-1 -6.98e-2 -9.85e-2 -0.0709   0.509    0.0511  #>  8 row0…  1.58e-2 -0.0518  -1.34e-2 -1.03e-2 -4.12e-3 -0.0139   0.225   -0.0244  #>  9 row0…  2.22e-3  0.0752   3.30e-2 -6.50e-4 -5.00e-1 -0.0278  -0.0740  -0.00556 #> 10 row0…  7.13e-4 -0.0119   1.95e-2 -5.06e-3 -7.08e-3  0.00341 -0.00369 13.4     #> # ℹ 174 more rows #> # ℹ 22 more variables: z09 <dbl>, z10 <dbl>, z11 <dbl>, z12 <dbl>, z13 <dbl>, #> #   z14 <dbl>, z15 <dbl>, z16 <dbl>, z17 <dbl>, z18 <dbl>, z19 <dbl>, #> #   z20 <dbl>, z21 <dbl>, z22 <dbl>, z23 <dbl>, z24 <dbl>, z25 <dbl>, #> #   z26 <dbl>, z27 <dbl>, z28 <dbl>, z29 <dbl>, z30 <dbl> get_varimax_y(fa) #> # A tibble: 184 × 31 #>    id          y01      y02      y03      y04      y05      y06     y07      y08 #>    <chr>     <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>   <dbl>    <dbl> #>  1 col001 -0.00455 -1.72e-2  8.06e-3 -3.08e-3 -0.0100   0.0155   0.317   1.16    #>  2 col002 -0.0282  -1.30e-1  1.46e-1  6.56e-2 -0.0243  -0.0199   2.15   -0.00828 #>  3 col003 -0.0274  -4.84e-1 -4.23e-2 -8.76e-2 -0.149    0.788   -0.319   0.00535 #>  4 col004 -0.0119  -1.87e-1 -1.93e-2 -6.55e-2 -0.0527   0.146   -0.227  -0.0128  #>  5 col005 -0.0168   5.16e-2  1.33e-1  1.29e-1 -0.0170  -0.0563   2.32   -0.0376  #>  6 col006 -0.0663  -1.07e-2  3.98e-2  2.43e-2 -0.0454   0.00226  1.12   -0.0182  #>  7 col007 -0.0124   5.94e-1  1.90e-1  3.10e-2  0.00379 -0.0280   0.807   0.0115  #>  8 col008  0.0142   5.29e-2 -1.00e-2 -8.83e-3 -0.0823  -0.0227  -0.0102 -0.00142 #>  9 col009 -0.00243  1.73e-3  5.17e-4  1.16e-3 -0.210   -0.00822 -0.0244 -0.00329 #> 10 col010  0.00404  5.07e-4 -1.94e-1 -9.31e-4  0.0119  -0.278   -0.181   5.51    #> # ℹ 174 more rows #> # ℹ 22 more variables: y09 <dbl>, y10 <dbl>, y11 <dbl>, y12 <dbl>, y13 <dbl>, #> #   y14 <dbl>, y15 <dbl>, y16 <dbl>, y17 <dbl>, y18 <dbl>, y19 <dbl>, #> #   y20 <dbl>, y21 <dbl>, y22 <dbl>, y23 <dbl>, y24 <dbl>, y25 <dbl>, #> #   y26 <dbl>, y27 <dbl>, y28 <dbl>, y29 <dbl>, y30 <dbl>"},{"path":"https://rohelab.github.io/vsp/dev/reference/get_z_hubs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get most important hubs for each Z factor — get_z_hubs","title":"Get most important hubs for each Z factor — get_z_hubs","text":"Get important hubs Z factor","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/get_z_hubs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get most important hubs for each Z factor — get_z_hubs","text":"","code":"get_z_hubs(fa, hubs_per_factor = 10, factors = 1:fa$rank)  get_y_hubs(fa, hubs_per_factor = 10, factors = 1:fa$rank)"},{"path":"https://rohelab.github.io/vsp/dev/reference/get_z_hubs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get most important hubs for each Z factor — get_z_hubs","text":"fa vsp_fa() object. hubs_per_factor number important nodes get per latent factor. Defaults 10. factors specific columns index . reliable option index integer vector column indices, also use character vector columns named. default returns factors/singular vectors.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/get_z_hubs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get most important hubs for each Z factor — get_z_hubs","text":"tibble::tibble() row corresponds single hub, three columns: id: Node id hub node factor: factor node hub . Nodes can hubs multiple factors. loading: actual value hubs factor loading factor.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/get_z_hubs.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get most important hubs for each Z factor — get_z_hubs","text":"get_y_hubs(): Get important hubs Y factor","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/get_z_hubs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get most important hubs for each Z factor — get_z_hubs","text":"","code":"data(enron, package = \"igraphdata\")  fa <- vsp(enron, rank = 30) #> This graph was created by an old(er) igraph version. #> ℹ Call `igraph::upgrade_graph()` on it to use with the current igraph version. #> For now we convert it on the fly... fa #> Vintage Sparse PCA Factor Analysis #>  #> Rows (n):   184 #> Cols (d):   184 #> Factors (rank): 30 #> Lambda[rank]:   0.2077 #> Components #>  #> Z: 184 x 30 [matrix]  #> B: 30 x 30 [matrix]  #> Y: 184 x 30 [matrix]  #> u: 184 x 30 [matrix]  #> d: 30      [numeric]  #> v: 184 x 30 [matrix]  #>   get_z_hubs(fa) #> # A tibble: 300 × 3 #> # Groups:   factor [30] #>    id     factor loading #>    <chr>  <chr>    <dbl> #>  1 row179 z01    13.6    #>  2 row181 z01     0.159  #>  3 row110 z01     0.103  #>  4 row073 z01     0.0611 #>  5 row097 z01     0.0463 #>  6 row075 z01    -0.0416 #>  7 row106 z01    -0.0407 #>  8 row058 z01     0.0405 #>  9 row164 z01     0.0398 #> 10 row006 z01    -0.0346 #> # ℹ 290 more rows get_y_hubs(fa) #> # A tibble: 300 × 3 #> # Groups:   factor [30] #>    id     factor loading #>    <chr>  <chr>    <dbl> #>  1 col179 y01    13.6    #>  2 col110 y01     0.217  #>  3 col052 y01     0.217  #>  4 col148 y01     0.198  #>  5 col099 y01     0.156  #>  6 col068 y01     0.142  #>  7 col181 y01     0.113  #>  8 col114 y01    -0.0971 #>  9 col057 y01     0.0803 #> 10 col054 y01     0.0786 #> # ℹ 290 more rows"},{"path":"https://rohelab.github.io/vsp/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://rohelab.github.io/vsp/dev/reference/plot_ipr_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot pairs of inverse participation ratios for singular vectors — plot_ipr_pairs","title":"Plot pairs of inverse participation ratios for singular vectors — plot_ipr_pairs","text":"IPR given singular vector O(1) rather O(1 / sqrt(n)), can indicate singular vector localizing small subset nodes. Oftentimes localization indicates overfitting. see IPR values close zero (\"close zero\" something sort pick time), need investigation see localization localization corresponds overfitting. Note, however, localization overfitting.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/plot_ipr_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot pairs of inverse participation ratios for singular vectors — plot_ipr_pairs","text":"","code":"plot_ipr_pairs(fa)"},{"path":"https://rohelab.github.io/vsp/dev/reference/plot_ipr_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot pairs of inverse participation ratios for singular vectors — plot_ipr_pairs","text":"fa vsp_fa() object.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/plot_ipr_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot pairs of inverse participation ratios for singular vectors — plot_ipr_pairs","text":"tibble::tibble() one row node, one column containing requested factor singular vector, plus additional id column.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/plot_mixing_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the mixing matrix B — plot_mixing_matrix","title":"Plot the mixing matrix B — plot_mixing_matrix","text":"Plot mixing matrix B","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/plot_mixing_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the mixing matrix B — plot_mixing_matrix","text":"","code":"plot_mixing_matrix(fa)"},{"path":"https://rohelab.github.io/vsp/dev/reference/plot_mixing_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the mixing matrix B — plot_mixing_matrix","text":"fa vsp_fa() object.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/plot_mixing_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the mixing matrix B — plot_mixing_matrix","text":"tibble::tibble() one row node, one column containing requested factor singular vector, plus additional id column.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/plot_varimax_z_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a pairs plot of select Y factors — plot_varimax_z_pairs","title":"Create a pairs plot of select Y factors — plot_varimax_z_pairs","text":"avoid overplotting, plots data maximum 1000 nodes. 1000 nodes, samples 1000 nodes randomly proportional row norms (.e. nodes embeddings larger magniture likely sampled).","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/plot_varimax_z_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a pairs plot of select Y factors — plot_varimax_z_pairs","text":"","code":"plot_varimax_z_pairs(fa, factors = 1:min(5, fa$rank), ...)  plot_varimax_y_pairs(fa, factors = 1:min(5, fa$rank), ...)  plot_svd_u(fa, factors = 1:min(5, fa$rank))  plot_svd_v(fa, factors = 1:min(5, fa$rank))"},{"path":"https://rohelab.github.io/vsp/dev/reference/plot_varimax_z_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a pairs plot of select Y factors — plot_varimax_z_pairs","text":"fa vsp_fa() object. factors specific columns index . reliable option index integer vector column indices, also use character vector columns named. default returns factors/singular vectors. ... Arguments passed GGally::ggpairs data data set using.  Can numerical categorical data. mapping aesthetic mapping (besides x y).  See aes().  mapping numeric, columns set mapping value mapping set NULL. columns columns used make plots.  Defaults columns. title,xlab,ylab title, x label, y label graph upper see Details lower see Details diag see Details params deprecated.  Please see wrap_fn_with_param_arg axisLabels either \"show\" display axisLabels, \"internal\" labels diagonal plots, \"none\" axis labels columnLabels label names displayed.  Defaults names columns used. labeller labeller facets. See labellers. Common values \"label_value\" (default) \"label_parsed\". switch switch parameter facet_grid. See ggplot2::facet_grid.  default, labels displayed top right plot. \"x\", top labels displayed bottom. \"y\", right-hand side labels displayed left. Can also set \"\" showStrips boolean determine plot's strips displayed. NULL default top right side plots . TRUE FALSE turn strips respectively. legend May two objects described default NULL value.  legend position can moved using ggplot2's theme element pm + theme(legend.position = \"bottom\") single numeric value provides location plot according display order. legend = 3 plot matrix 2 rows 5 columns displayed column return plot position c(1,2) object grab_legend() predetermined plot legend displayed directly cardinality_threshold maximum number levels allowed character / factor column.  Set value NULL check factor columns. Defaults 15 progress NULL (default) progress bar interactive sessions 15 plots, TRUE progress bar, FALSE progress bar, function accepts least plot matrix returns new progress::progress_bar.  See ggmatrix_progress. proportions Value change much area given plot. Either NULL (default), numeric value matching respective length, grid::unit object matching respective length \"auto\" automatic relative proportions based number levels categorical variables. legends deprecated","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/plot_varimax_z_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a pairs plot of select Y factors — plot_varimax_z_pairs","text":"ggplot2::ggplot() plot GGally::ggpairs() plot.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/plot_varimax_z_pairs.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a pairs plot of select Y factors — plot_varimax_z_pairs","text":"plot_varimax_y_pairs(): Create pairs plot select Z factors plot_svd_u(): Create pairs plot select left singular vectors plot_svd_v(): Create pairs plot select right singular vectors","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/safe_row_l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe L2 row normalization — safe_row_l2_normalize","title":"Safe L2 row normalization — safe_row_l2_normalize","text":"Helper function Kaiser normalization handle rows zero (numerically zero) norm, results divide zero error stats::varimax() implementation.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/safe_row_l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe L2 row normalization — safe_row_l2_normalize","text":"","code":"safe_row_l2_normalize(x, eps = 1e-10)"},{"path":"https://rohelab.github.io/vsp/dev/reference/safe_row_l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe L2 row normalization — safe_row_l2_normalize","text":"x matrix row normalize. eps Tolerance use assessing squared L2 row norm numerically larger smaller zero.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/safe_row_l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe L2 row normalization — safe_row_l2_normalize","text":"row-rescaled matrix","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/screeplot.vsp_fa.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a screeplot from a factor analysis object — screeplot.vsp_fa","title":"Create a screeplot from a factor analysis object — screeplot.vsp_fa","text":"Create screeplot factor analysis object","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/screeplot.vsp_fa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a screeplot from a factor analysis object — screeplot.vsp_fa","text":"","code":"# S3 method for class 'vsp_fa' screeplot(x, ...)"},{"path":"https://rohelab.github.io/vsp/dev/reference/screeplot.vsp_fa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a screeplot from a factor analysis object — screeplot.vsp_fa","text":"x vsp_fa() object. ... Ignored, included consistency S3 generic.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/screeplot.vsp_fa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a screeplot from a factor analysis object — screeplot.vsp_fa","text":"tibble::tibble() one row node, one column containing requested factor singular vector, plus additional id column.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/set_z_factor_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Give the dimensions of Z factors informative names — set_z_factor_names","title":"Give the dimensions of Z factors informative names — set_z_factor_names","text":"Give dimensions Z factors informative names","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/set_z_factor_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give the dimensions of Z factors informative names — set_z_factor_names","text":"","code":"set_z_factor_names(fa, names)  set_y_factor_names(fa, names)"},{"path":"https://rohelab.github.io/vsp/dev/reference/set_z_factor_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give the dimensions of Z factors informative names — set_z_factor_names","text":"fa vsp_fa() object. names Describe new names Z/Y factors.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/set_z_factor_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Give the dimensions of Z factors informative names — set_z_factor_names","text":"new vsp_fa() object, columns names Z row names B set names (set_z_factor_names), column names B column names Y set names (set_y_factor_names).","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/set_z_factor_names.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Give the dimensions of Z factors informative names — set_z_factor_names","text":"set_y_factor_names(): Give dimensions Y factors informative names","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vsp: Vintage Sparse PCA for Semi-Parametric Factor Analysis — vsp-package","title":"vsp: Vintage Sparse PCA for Semi-Parametric Factor Analysis — vsp-package","text":"Provides fast spectral estimation latent factors random dot product graphs using vsp estimator. mild assumptions, vsp estimator consistent (degree-corrected) stochastic blockmodels, (degree-corrected) mixed-membership stochastic blockmodels, degree-corrected overlapping stochastic blockmodels.","code":""},{"path":[]},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vsp: Vintage Sparse PCA for Semi-Parametric Factor Analysis — vsp-package","text":"Maintainer: Alex Hayes alexpghayes@gmail.com (ORCID) [copyright holder] Authors: Karl Rohe karlrohe@stat.wisc.edu Muzhe Zeng mzeng6@wisc.edu Fan Chen","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Semi-Parametric Factor Analysis via Vintage Sparse PCA — vsp","title":"Semi-Parametric Factor Analysis via Vintage Sparse PCA — vsp","text":"code implements TODO.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semi-Parametric Factor Analysis via Vintage Sparse PCA — vsp","text":"","code":"vsp(x, rank, ...)  # Default S3 method vsp(x, rank, ...)  # S3 method for class 'matrix' vsp(   x,   rank,   ...,   center = FALSE,   recenter = FALSE,   degree_normalize = TRUE,   renormalize = FALSE,   tau_row = NULL,   tau_col = NULL,   kaiser_normalize_u = FALSE,   kaiser_normalize_v = FALSE,   rownames = NULL,   colnames = NULL,   match_columns = TRUE )  # S3 method for class 'Matrix' vsp(   x,   rank,   ...,   center = FALSE,   recenter = FALSE,   degree_normalize = TRUE,   renormalize = FALSE,   tau_row = NULL,   tau_col = NULL,   kaiser_normalize_u = FALSE,   kaiser_normalize_v = FALSE,   rownames = NULL,   colnames = NULL,   match_columns = TRUE )  # S3 method for class 'dgCMatrix' vsp(   x,   rank,   ...,   center = FALSE,   recenter = FALSE,   degree_normalize = TRUE,   renormalize = FALSE,   tau_row = NULL,   tau_col = NULL,   kaiser_normalize_u = FALSE,   kaiser_normalize_v = FALSE,   rownames = NULL,   colnames = NULL,   match_columns = TRUE )  # S3 method for class 'igraph' vsp(x, rank, ..., edge_weights = NULL)"},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Semi-Parametric Factor Analysis via Vintage Sparse PCA — vsp","text":"x Either graph adjacency matrix, igraph::igraph tidygraph::tbl_graph. x matrix Matrix::Matrix x[, j] correspond edge going node node j. rank number factors calculate. ... dots future extensions must empty. center adjacency matrix row column centered? Defaults FALSE. recenter varimax factors re-centered around original factor means? used center = TRUE, defaults FALSE. degree_normalize regularized graph laplacian used instead raw adjacency matrix? Defaults TRUE. center = TRUE, first centered normalized. renormalize regularized graph laplacian used instead raw adjacency matrix? Defaults TRUE. center = TRUE, first centered normalized. tau_row Row regularization term. Default NULL, case use row degree. Ignored degree_normalize = FALSE. tau_col Column regularization term. Default NULL, case use column degree. Ignored degree_normalize = FALSE. kaiser_normalize_u Whether use Kaiser normalization rotating left singular vectors U. Defaults FALSE. kaiser_normalize_v Whether use Kaiser normalization rotating right singular vectors V. Defaults FALSE. rownames Character vector row names x. row names propagated row names U Z. Defaults NULL. colnames Character vector column names x. column names propagated row names V Y. Defaults NULL. match_columns columns Y re-ordered Y[, ] corresponds Z[, ] extent possible? Defaults TRUE. Typically helps interpretation, often makes B diagonally dominant. edge_weights x igraph::igraph, edge attribute use form weighted adjacency matrix.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Semi-Parametric Factor Analysis via Vintage Sparse PCA — vsp","text":"object class vsp. TODO: Details","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Semi-Parametric Factor Analysis via Vintage Sparse PCA — vsp","text":"Sparse SVDs use RSpectra performance.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Semi-Parametric Factor Analysis via Vintage Sparse PCA — vsp","text":"","code":"library(LRMF3) #> Loading required package: Matrix  vsp(ml100k, rank = 2) #> Vintage Sparse PCA Factor Analysis #>  #> Rows (n):   943 #> Cols (d):   1682 #> Factors (rank): 2 #> Lambda[rank]:   0.2994 #> Components #>  #> Z: 943 x 2 [matrix]  #> B: 2 x 2 [matrix]  #> Y: 1682 x 2 [matrix]  #> u: 943 x 2 [matrix]  #> d: 2      [numeric]  #> v: 1682 x 2 [matrix]  #>"},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp.svd_like.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform varimax rotation on a low rank matrix factorization — vsp.svd_like","title":"Perform varimax rotation on a low rank matrix factorization — vsp.svd_like","text":"Perform varimax rotation low rank matrix factorization","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp.svd_like.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform varimax rotation on a low rank matrix factorization — vsp.svd_like","text":"","code":"# S3 method for class 'svd_like' vsp(   x,   rank,   ...,   centerer = NULL,   scaler = NULL,   recenter = FALSE,   renormalize = FALSE,   kaiser_normalize_u = FALSE,   kaiser_normalize_v = FALSE,   rownames = NULL,   colnames = NULL,   match_columns = TRUE )"},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp.svd_like.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform varimax rotation on a low rank matrix factorization — vsp.svd_like","text":"x Either graph adjacency matrix, igraph::igraph tidygraph::tbl_graph. x matrix Matrix::Matrix x[, j] correspond edge going node node j. rank number factors calculate. ... dots future extensions must empty. centerer TODO scaler TODO recenter varimax factors re-centered around original factor means? used center = TRUE, defaults FALSE. renormalize regularized graph laplacian used instead raw adjacency matrix? Defaults TRUE. center = TRUE, first centered normalized. kaiser_normalize_u Whether use Kaiser normalization rotating left singular vectors U. Defaults FALSE. kaiser_normalize_v Whether use Kaiser normalization rotating right singular vectors V. Defaults FALSE. rownames Character vector row names x. row names propagated row names U Z. Defaults NULL. colnames Character vector column names x. column names propagated row names V Y. Defaults NULL. match_columns columns Y re-ordered Y[, ] corresponds Z[, ] extent possible? Defaults TRUE. Typically helps interpretation, often makes B diagonally dominant.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp.svd_like.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform varimax rotation on a low rank matrix factorization — vsp.svd_like","text":"","code":"library(LRMF3) library(RSpectra)  s <- svds(ml100k, k = 2) mf <- as_svd_like(s) fa <- vsp(mf, rank = 2)"},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp_fa.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vintage sparse factor analysis object — vsp_fa","title":"Create a vintage sparse factor analysis object — vsp_fa","text":"vsp_fa objects subclass LRMF3::fa_like(), additional fields u, d, v, transformers, R_U, R_V","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp_fa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vintage sparse factor analysis object — vsp_fa","text":"","code":"vsp_fa(   u,   d,   v,   Z,   B,   Y,   transformers,   R_U,   R_V,   rownames = NULL,   colnames = NULL )"},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp_fa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vintage sparse factor analysis object — vsp_fa","text":"u matrix() \"left singular-ish\" vectors. d numeric() vector \"singular-ish\" values. v matrix() \"right singular-ish\" vectors. Z matrix embeddings observation. B mixing matrix describing observation embeddings topics interact. diagonal! Y matrix describing compositions various topics factors. transformers list transformatioms invertiforms package. R_U Varimax rotation matrix use transform u Z. R_V Varimax rotation matrix use transform v Y. rownames Identifying names row original data. Defaults NULL, cases row given row number left-padded zeros name. colnames Identifying names column original data. Defaults NULL, cases column given row column left-padded zeros name.","code":""},{"path":"https://rohelab.github.io/vsp/dev/reference/vsp_fa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vintage sparse factor analysis object — vsp_fa","text":"svd_fa object.","code":""},{"path":"https://rohelab.github.io/vsp/dev/news/index.html","id":"vsp-development-version","dir":"Changelog","previous_headings":"","what":"vsp (development version)","title":"vsp (development version)","text":"Default using clue heuristically align Z Y factors (use match_columns = FALSE previous behavior) Compatibility updates new Matrix release Add usage examples documentation (primarily testing purposes)","code":""},{"path":"https://rohelab.github.io/vsp/dev/news/index.html","id":"vsp-011","dir":"Changelog","previous_headings":"","what":"vsp 0.1.1","title":"vsp 0.1.1","text":"CRAN release: 2022-12-05 Version bump CRAN, reflecting new features","code":""},{"path":"https://rohelab.github.io/vsp/dev/news/index.html","id":"vsp-010","dir":"Changelog","previous_headings":"","what":"vsp 0.1.0","title":"vsp 0.1.0","text":"CRAN release: 2022-02-10 Added NEWS.md file track changes package.","code":""}]
