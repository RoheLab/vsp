% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vsp.R
\name{update.vsp}
\alias{update.vsp}
\title{Calculate new factors and add them to an existing factor analysis}
\usage{
update.vsp(object, graph, ..., k, update_varimax = FALSE)
}
\arguments{
\item{object}{A [vsp][vsp-object] object. TODO: better link}

\item{graph}{Either a graph adjacency matrix, [igraph::igraph] or
[tidygraph::tbl_graph]. If `x` is a [matrix] or [Matrix::Matrix]
then `x[i, j]` should correspond to the edge going from node `i`
to node `j`.}

\item{...}{Ignored.}

\item{k}{A new number of desired total factors. Must be larger than
the number of factors that have currently been calculated.}

\item{update_varimax}{Should the varimax rotations be updated as well?
Defaults to `FALSE`.}
}
\value{
A [vsp][vsp-object] factor analysis based on `graph` with `k`
 factors.
}
\description{
Calculate new factors and add them to an existing factor analysis
}
\details{
First `object` and `graph` are used to preprocess the graph
 as in the original computations. Then we construct a rank `object$k`
 approximation to the pre-processed graph, and subtract this
 approximation from the graph. Then we do a new partial SVD on this
 deflated graph, calculating `k - object$k` new singular vectors and
 values. The results from this new SVD are bound to the results from
 the original SVD. If the `update_varimax = TRUE`, then varimax
 rotations are recomputed from scratch.

 Note that the original SVD loadings (i.e. the `U`, `d`, and `V`
 elements) will agree with new first `object$k` SVD loadings.
 However, the original varimax loadings (the `Z`, `B` and `Y` elements)
 generally *will not* agree with the updated varimax loadings.

 The `update_varimax` step can potentially be sped up by using a warm
 start based on `object$R_U` and `object$R_V`, but these will require
 a custom varimax implementation. We'll probably do this anyway, so
 no reason not to build in a warm start.
}
